!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=11)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,r=function(){function t(t){this.value=t}return t.parseEmailStringsFromString=function(e){return e.replace(/^\s+|\s+$/g,"").split(/\s*,\s*/g).filter((function(t){return t.length>0})).map((function(e){return new t(e)}))},t.prototype.isValid=function(){return i.test(this.value)},t}();e.EmailString=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e){this.ownerDocument=t,this.model=e}return t.prototype.getModel=function(){return this.model},t.prototype.getOwnerDocument=function(){return this.ownerDocument},t.prototype.getHtml=function(){return this.html},t.prototype.extractDataTransferData=function(t){try{return t.getData("Text")||t.getData("text/plain")}catch(t){return""}},t.prototype.extractClipboardText=function(t){return this.extractDataTransferData(t.clipboardData||this.ownerDocument.getClipBoardData())},t.prototype.extractDroppedText=function(t){return this.extractDataTransferData(t.dataTransfer)},t.prototype.createElement=function(t){return this.ownerDocument.createElement(t)},t.prototype.create=function(){return this.model.addObserver(this),this.html=this.createHtml(),this.update("*"),this},t.prototype.update=function(t){},t}();e.View=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(0),r=n(3),o=n(5),s=n(6),a=function(){function t(t,e){this.root=t,this.emailsList=new r.EmailStringList((e&&e.emails||[]).map((function(t){return new i.EmailString(t)}))),this.emailInputView=new s.EmailsInputView(new o.ViewDocument(t.ownerDocument),this.emailsList),this.onEmailsListChange=e&&e.onChange}return t.prototype.getEmails=function(){return this.emailsList.getEmails().map((function(t){return t.value}))},t.prototype.setEmails=function(t){this.emailsList.setEmails(t.map((function(t){return new i.EmailString(t)})))},t.prototype.addEmail=function(t){this.emailsList.addEmails([new i.EmailString(t)])},t.prototype.scrollToBottom=function(){this.emailInputView.scrollToBottom()},t.prototype.create=function(){return this.emailsList.addObserver(this),this.root.appendChild(this.emailInputView.create().getHtml()),this},t.prototype.update=function(t){"emails"===t&&this.onEmailsListChange&&this.onEmailsListChange(this.getEmails())},t}();e.EmailsInput=a},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=function(t){function e(e){var n=t.call(this)||this;return n.emails=e,n}return r(e,t),e.prototype.getEmails=function(){return this.emails},e.prototype.setEmails=function(t){this.emails=t,this.notifyObservers("emails")},e.prototype.removeEmail=function(t){this.setEmails(this.emails.filter((function(e){return e!==t})))},e.prototype.addEmails=function(t){this.setEmails(this.emails.concat(t))},e}(n(4).Observable);e.EmailStringList=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){this.observers=[]}return t.prototype.addObserver=function(t){this.observers.push(t)},t.prototype.removeObserver=function(t){this.observers=this.observers.filter((function(e){return e!==t}))},t.prototype.hasObserver=function(t){return this.observers.includes(t)},t.prototype.notifyObservers=function(t){this.observers.slice(0).forEach((function(e){return e.update(t)}))},t}();e.Observable=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t){this.domDocument=t}return t.prototype.getClipBoardData=function(){return this.domDocument.defaultView.clipboardData},t.prototype.isInputScrollWidthSupported=function(){if(void 0===this.inputScrollWidthSupported){var t=this.createElement({name:"input"});t.value="0000000000000000000000000000",t.style.width="1px",t.style.border="none",t.style.outline="none",this.domDocument.body.appendChild(t),this.inputScrollWidthSupported=t.scrollWidth>t.offsetWidth,this.domDocument.body.removeChild(t)}return this.inputScrollWidthSupported},t.prototype.createElement=function(t){var e=this.domDocument.createElement(t.name);if(e.className=t.classes?t.classes.join(" "):"",e.textContent=t.text||"",t.children&&t.children.forEach((function(t){return e.appendChild(t)})),t.listeners)for(var n in t.listeners)t.listeners.hasOwnProperty(n)&&e.addEventListener(n,t.listeners[n]);return e},t}();e.ViewDocument=i},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),s=n(0),a=n(7);n(9);var u=function(t){function e(e,n){var i=t.call(this,e,n)||this;return i.emailStringListView=new a.EmailStringListView(e,n),i}return r(e,t),e.prototype.scrollToBottom=function(){this.html.scrollTop=this.html.scrollHeight},e.prototype.updateInputWidth=function(){this.input.style.width="",this.input.value&&(this.getOwnerDocument().isInputScrollWidthSupported()?this.input.style.width=this.input.scrollWidth+1+"px":(this.inputSizer.textContent=this.input.value,this.input.style.width=this.inputSizer.scrollWidth+"px"))},e.prototype.addEmailsFromString=function(t,e){var n=s.EmailString.parseEmailStringsFromString(t);n.length>0&&(this.getModel().addEmails(n),e&&(this.input.value=this.input.value.substr(t.length).replace(/^\s+/,""),this.input.setSelectionRange(0,0),this.updateInputWidth()))},e.prototype.handleInputBlurEvent=function(){this.addEmailsFromString(this.input.value,!0)},e.prototype.handleInputPasteEvent=function(t){this.addEmailsFromString(this.extractClipboardText(t),!1),this.scrollToBottom(),t.preventDefault()},e.prototype.handleInputKeyDownEvent=function(t){"Enter"===t.key&&this.addEmailsFromString(this.input.value,!0)},e.prototype.handleInputKeyUpEvent=function(t){if(","===t.key){var e=this.input.value.lastIndexOf(",");-1!==e&&this.addEmailsFromString(this.input.value.substr(0,e+1),!0)}},e.prototype.handleInputTextInputEvent=function(){this.updateInputWidth()},e.prototype.handleDragEvent=function(t){t.preventDefault()},e.prototype.handleDropEvent=function(t){this.addEmailsFromString(this.extractDroppedText(t),!1),this.scrollToBottom(),t.preventDefault()},e.prototype.handleClickEvent=function(t){t.target===this.getHtml()&&this.input.focus()},e.prototype.createHtml=function(){var t=this;return this.input=this.createElement({name:"input",classes:["emails-input__control"],listeners:{blur:function(){return t.handleInputBlurEvent()},paste:function(e){return t.handleInputPasteEvent(e)},keydown:function(e){return t.handleInputKeyDownEvent(e)},keyup:function(e){return t.handleInputKeyUpEvent(e)},input:function(){return t.handleInputTextInputEvent()}}}),this.inputSizer=this.createElement({name:"span",classes:["emails-input__control-sizer"]}),this.createElement({name:"div",classes:["emails-input"],children:[this.emailStringListView.create().getHtml(),this.inputSizer,this.input],listeners:{dragenter:function(e){return t.handleDragEvent(e)},dragover:function(e){return t.handleDragEvent(e)},drop:function(e){return t.handleDropEvent(e)},click:function(e){return t.handleClickEvent(e)}}})},e}(o.View);e.EmailsInputView=u},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(1);n(8);var s=function(t){function e(e,n){return t.call(this,e,n)||this}return r(e,t),e.prototype.createEmailHtml=function(t){var e=this;return this.createElement({name:"span",classes:["email-string-list__email-block","email-string-list__email-block-"+(t.isValid()?"valid":"invalid")],children:[this.createElement({name:"span",classes:["email-string-list__email-label"],text:t.value}),this.createElement({name:"span",classes:["email-string-list__email-remove-button"],text:"Ã—",listeners:{click:function(){return e.getModel().removeEmail(t)}}})]})},e.prototype.createHtml=function(){return this.createElement({name:"span",classes:["email-string-list"]})},e.prototype.update=function(e){var n=this;if("emails"===e||"*"===e){for(;this.getHtml().firstChild;)this.getHtml().removeChild(this.getHtml().firstChild);this.getModel().getEmails().forEach((function(t){return n.getHtml().appendChild(n.createEmailHtml(t))}))}t.prototype.update.call(this,e)},e}(o.View);e.EmailStringListView=s},function(t,e,n){},function(t,e,n){},,function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(2);n(12);var r=document.getElementById("emails-count");r.textContent="2";var o=new i.EmailsInput(document.getElementById("email-input"),{emails:["bla@bla.com","invalid.com"],onChange:function(t){r.textContent=String(t.length)}}).create(),s=["bob","rob","john","steve","jane","anna"],a=["apple","facebook","google","linkedin"],u=["com","org","net","nl","ru","ua"];function l(t){return t[Math.round(Math.random()*(t.length-1))]}document.getElementById("add-email").addEventListener("click",(function(){o.addEmail(l(s)+"@"+l(a)+"."+l(u)),o.scrollToBottom()})),document.getElementById("get-emails-count").addEventListener("click",(function(){alert(o.getEmails().length+" emails entered!")}))},function(t,e,n){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,